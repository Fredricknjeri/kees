---
- name: "Create kees directory"
  file:
    path: "{{ kees_path }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: 0755

- name: "Create Docker Compose file"
  template:
    src: "docker-compose.yml.j2"
    dest: "{{ kees_path }}/docker-compose.yml"
    owner: "root"
    group: "root"
    mode: 0644
  notify: Restart kees

- name: "Create running containers"
  docker_compose:
    state: "present"
    project_src: "{{ kees_path }}"
    pull: true
    remove_orphans: true

- name: Create /etc/nginx/sites-available/kees
  template:
    src: templates/kees-nginx.conf.j2
    dest: /etc/nginx/sites-available/kees
    owner: root
    mode: 0644
  notify: Restart nginx

- name: Create symlink /etc/nginx/sites-enabled/kees
  file:
    src: /etc/nginx/sites-available/kees
    dest: /etc/nginx/sites-enabled/kees
    state: link
  notify: Restart nginx

- name: Create /etc/nginx/snippets/kees-security-headers.conf
  template:
    src: templates/kees-security-headers.conf.j2
    dest: /etc/nginx/snippets/kees-security-headers.conf
    owner: root
    mode: 0644
  notify: Restart nginx

- name: Retrieve SSL config from ssl-config.mozilla.org
  uri:
    url: https://ssl-config.mozilla.org/guidelines/latest.json
    method: GET
    return_content: yes
    status_code: 200
  register: result

- name: Parse SSL config
  set_fact:
    ssl_config: "{{ result.content | from_json }}"

- debug:
    msg: Retrieved SSL config version {{ ssl_config.version }}

- name: Create /etc/nginx/snippets/kees-ssl.conf
  template:
    src: templates/kees-ssl.conf.j2
    dest: /etc/nginx/snippets/kees-ssl.conf
    owner: root
    mode: 0644
  notify: Restart nginx

- name: Create /etc/systemd/system/kees.service
  template:
    src: templates/kees.service.j2
    dest: /etc/systemd/system/kees.service
    owner: root
    mode: 0644
  notify: Restart kees

- name: Enable kees service
  systemd:
    name: kees
    enabled: yes
